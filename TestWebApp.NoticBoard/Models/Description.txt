ASP.NET Core

1. ASP.NET Core 1.0 ~ 3.1 => .NET 5.0 ~ 6.0
  - 크로스 플랫폼 지원
 
2. Entity Framework Core Code First
  - Add-Migration, Update DataBase
  - 의존성 주입을 통한 DB Context 사용 가능


3. 미들웨어 사용 (Startup.cs 파일)
 - 웹 성능 및 크로스 플랫폼 고려
 - UseStaticFiles, UseSession, Authentication 등등 

4. 기본 프로젝트 형식
 - _Layout.cshtml => 레이아웃 프레임, RenderBody()
 - _ViewStart => 대표 레이아웃 프레임 설정
 - _ViewImport => NameSpace 및 Helper 등 전역적으로 설정 가능
 - TagHelper 기능 => HTML 태그에 Helper를 적용하여, 편의 기능 사용 가능
 
5. MVC 패턴 적용 
  - Model, View, Controller 형식의 패턴을 사용
  - Controller/Action 
  - Controller 단에서 값을 전달 받아, View쪽으로 모델 전달 가능


.gitignore가 제대로 작동되지 않아서 ignore처리된 파일이 자꾸 changes에 나올때가 있습니다.
git의 캐시가 문제가 되는거라 아래 명령어로 캐시 내용을 전부 삭제후 다시 add All해서 커밋하시면 됩니다.

git rm -r --cached .
git add .
git commit -m "fixed untracked files"


LF will be replaced by CRLF the next time Git touches it 발생시
git config --global core.autocrlf true



Enterprise Architecture

1) 대형 솔루션, 프로그램 개발 사용하는 프로젝트 구성 방식
 - 큰 틀을 구성

2) 다양한 플랫폼을 지원하는 재사용성이 높은 코드를 작성하는 방식

Cache
 - 목적 : 자주 불러오는 데이터를 메모리에 담아서 출력하는 것
 - 장점 : 컴퓨팅 비용 감소, 데이터를 출력하는 속도가 증가
 - 단점 : 메모리를 많이 필요로 하게 됨.메모리 가격이 많이 싸짐.


 # 클래스 라이브러리 종류

 1) .net Framework
 2) .net core
 3) .net Framework(Portable) - Xamarin
 4) .net Standard


 #각 Tier 별로 접근 순서

 클라이언트 버튼 -> ASP.NET MVC 리스트 호출 출력 

 -> BLL -> IDAL -> DAL 