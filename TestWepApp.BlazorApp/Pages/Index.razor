@* 페이지 라우팅 *@

@page "/"


@* 해당 페이지를 불러 왔을 때, 브라우저 상단 탭에 있는 이름을 변경 가능 *@

<PageTitle>Index</PageTitle>
<InputFile OnChange="GetFiles"/>

<h1>Hello, world!</h1>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?" />

<h1 id="Test_Sample">블레이저 테스트1, 테스트 코드 작성</h1>
<p id="Test_Caption">블레이저 테스트2, 테스트 코드 작성</p>
<div class="Red_Box">Red_Box</div>
<div class="Red_Box">Red_Box</div>
<div class="Red_Box">Red_Box</div>

<Sharing></Sharing>
<Component GetText="부모로부터 주입된 문자 데이터"></Component>

<button @onclick="@(e => Add("아무것도 없는 빈텍스트"))">눌러보기</button>

<h1>Our selection of pizzas</h1>

@foreach (var pizza in State.Menu.Pizzas) 
{
    <div class="row">
        <div class="col">
            @pizza.Name
        </div>
        <div class="col text-right">
            @($"{pizza.Price:0.00}")
        </div>
        <div class="col"></div>
        <div class="col">
            <img alt="@pizza.Spiciness" />
        </div>
        <div class="col">
            <button class="btn btn-success pl-4 pr-4" @onclick="@(() => AddToBasket(pizza))">
                Add
            </button>
        </div>
    </div>
}


@if (State.Basket.Orders.Any())
{
    <h1 class="">Your current order</h1>

    @foreach(var (pizza, pos) in State.Basket.Orders.Select((id, pos) => (State.Menu.GetPizza(id), pos)))
    {
        <div class="row mb-2">
            <div class="col">
                @pizza.Name
            </div>
            <div class="col text-right">
                @($"{pizza.Price:0.00}")
            </div>
            <div class="col"></div>
            <div class="col"></div>
            <div class="col">
                <button class="btn btn-danger"
                        @onclick="@(() => RemoveFromBasket(pos))">
                    Remove
                </button>
            </div>
        </div>

    }
    <div class="row">
        <div class="col"></div>
        <div class="col"><hr /></div>
        <div class="col"> </div>
        <div class="col"> </div>
    </div>


}

<h1>Please enter your details below</h1>

<fieldset>
    <div class="row mb-2">
        <label class="col-2" for="name">Name:</label>
        <input class="col-6" id="name" @bind="State.Basket.Customer.Name" />
    </div>
    <div class="row mb-2">
        <label class="col-2" for="street">Street:</label>
        <input class="col-6" id="street" @bind="State.Basket.Customer.Street" />
    </div>
    <div class="row mb-2">
        <label class="col-2" for="city">City:</label>
        <input class="col-6" id="city" @bind="State.Basket.Customer.City" />
    </div>

    <button @onclick="PlaceOrder">Checkout</button>
</fieldset>



@State.ToJson();



@* Customer entry *@

<h1 class="mt-2 mb-2">Please enter your details below</h1>

<EditForm Model="@State.Basket.Customer" OnValidSubmit="PlaceOrder" >
    <DataAnnotationsValidator />
    <fieldset>
        <div class="row mb-2">
            <label class="col-2" for="name">Name:</label>
            <InputText class="form-control col-6" @bind-Value="@State.Basket.Customer.Name" />
        </div>
        <div class="row mb-2">
            <div class="col-6 offset-2">
                <ValidationMessage For="@(() => State.Basket.Customer.Name)" />
            </div>
        </div>
        <div class="row mb-2">
            <label class="col-2" for="street">Street:</label>
            <InputText class="form-control col-6" @bind-Value="@State.Basket.Customer.Street" />
        </div>
        <div class="row mb-2">
            <div class="col-6 offset-2">
                <ValidationMessage For="@(() => State.Basket.Customer.Street)" />
            </div>
        </div>
        <div class="row mb-2">
            <label class="col-2" for="city">City:</label>
            <InputText class="form-control col-6" @bind-Value="@State.Basket.Customer.City" />
        </div>
        <div class="row mb-2">
            <button class="mx-auto w-25 btn btn-success" @onclick=PlaceOrder>Checkout 
            </button>
        </div>


        <input class="form-control col-6 valid" />
        <input class="form-control col-6 modified valid" />

        <div class="row mb-2">
            <div class="col-6 offset-2">
                <ValidationMessage For="@(() => State.Basket.Customer.City)" />
            </div>
        </div>
        <ValidationSummary />
    </fieldset>

</EditForm>

<Alert Show="@ShowAlert">
    <span class="oi oi-check mr-2" aria-hidden="true"></span>
    <strong>Blazor is so cool!</strong>
</Alert>

<button @onclick="ToggleAlert" class="btn btn-success">Toggle</button>



@code{
    class TableName
    {
        public int Order { get; set; } = 0;
        public string Name { get; set; } = "홍길동";
        public string Price { get; set; } = "0원";
    }


    //이 페이지에서만 쓸 수 있는 정수형 변수
    private int Number { get; set; } = 1234;
    private long BinNum { get; set; } = 1234567;
    private string MyText { get; set; } = "블레이저의 C#";
    private string[] StrArray = new string[10];
    // private List<string> Slist = new List<string>();
    private List<string> Slist = new();


    private State State { get; } = new State();


    private void AddToBasket(Pizza pizza) => State.Basket.Add(pizza.Id);

    private void RemoveFromBasket(int pos) => State.Basket.RemoveAt(pos);

    public bool ShowAlert { get; set; } = true;

    public void ToggleAlert() => ShowAlert = !ShowAlert;

    private void PlaceOrder()
    {
        Console.WriteLine("Placing order");
    }


    void GetFiles(InputFileChangeEventArgs e)
    {
        Console.WriteLine(e.File.Name);

    }

    private void SimpleMethod()
    {
        Console.WriteLine("SimpleMethod");
    }

    private string Add(string get)
    {
        string strset = get + "추가 텍스트";

        return strset;
    }

    public override Task SetParametersAsync(ParameterView parameters)
    {
        Console.WriteLine($"{0}", "SetParametersAsync");

        return base.SetParametersAsync(parameters);
    }

    protected override void OnInitialized()
    {
        Console.WriteLine($"{0}", "OnInitialized");

        State.Menu.Add(new Pizza(1, "Pepperoni", 8.99M, Spiciness.Spicy));
        State.Menu.Add(new Pizza(2, "Margarita", 7.99M, Spiciness.None));
        State.Menu.Add(new Pizza(3, "Diabolo", 9.99M, Spiciness.Hot));
        



        base.OnInitialized();
    }

    protected override void OnParametersSet()
    {
        Console.WriteLine($"{0}", "OnParametersSet");
        base.OnParametersSet();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        Console.WriteLine($"{0}", "OnAfterRender");

        base.OnAfterRender(firstRender);
    }


}

