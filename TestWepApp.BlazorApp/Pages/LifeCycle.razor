@* 페이지 라우팅 *@

@page "/life/{data}"



@* 해당 페이지를 불러 왔을 때, 브라우저 상단 탭에 있는 이름을 변경 가능 *@

<PageTitle>라이프 사이클</PageTitle>
<InputFile OnChange="GetFiles" />

<h1>Hello, world!</h1>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?" />

<h1 id="Test_Sample">블레이저 테스트1, 테스트 코드 작성</h1>
<p id="Test_Caption">블레이저 테스트2, 테스트 코드 작성</p>
<div class="Red_Box">Red_Box</div>
<div class="Red_Box">Red_Box</div>
<div class="Red_Box">Red_Box</div>

<Sharing></Sharing>
<Component GetText="부모로부터 주입된 문자 데이터"></Component>

<button @onclick="@(e => Add("아무것도 없는 빈텍스트"))">눌러보기</button>

<input type="text"  @bind="Setting" />

@code {
    class TableName
    {
        public int Order { get; set; } = 0;
        public string Name { get; set; } = "홍길동";
        public string Price { get; set; } = "0원";
    }


    //이 페이지에서만 쓸 수 있는 정수형 변수
    private int Number { get; set; } = 1234;
    private long BinNum { get; set; } = 1234567;
    private string MyText { get; set; } = "블레이저의 C#";
    private string[] StrArray = new string[10];
    // private List<string> Slist = new List<string>();
    private List<string> Slist = new();

    [Parameter]
    public string Data { get; set; } = String.Empty;

    public string Setting { get; set; } = String.Empty;

    void GetFiles(InputFileChangeEventArgs e)
    {
        Console.WriteLine(e.File.Name);

    }

    private void SimpleMethod()
    {
        Console.WriteLine("SimpleMethod");
    }

    private string Add(string get)
    {
        string strset = get + "추가 텍스트";

        return strset;
    }

    public override Task SetParametersAsync(ParameterView parameters)
    {
        // 결과를 보았을 떄 url 주소로 부터 데이터를 받기전에 이 함수가 실행되어 빈값 출력
        Console.WriteLine(Data);

        Data = "셋 파라미터에서 추가";

        Console.WriteLine($"1. {Data}       |     2. {Setting}");

        return base.SetParametersAsync(parameters);
    }

    protected override void OnInitialized()
    {
        Data = "온 이니셜라이즈에서 변경";
        Setting = "온 이니셜라이즈에서 추가";

        Console.WriteLine($"1. {Data}       |     2. {Setting}");

        base.OnInitialized();
    }

    protected override void OnParametersSet()
    {
        Setting = Data + "했다가 온 파라밑너에서 더하기";

        Console.WriteLine($"1. {Data}       |     2. {Setting}");

        base.OnParametersSet();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if(firstRender)
        {
            Data = "애프터 렌더에서 초기화";
            Setting = "애프터 렌더에서 초기화";
        }
        else
        {
            Data = "페이지의 데이터가 변경되었을 경우 호출";
        }

        
        Console.WriteLine($"1. {Data}       |     2. {Setting}");


        base.OnAfterRender(firstRender);
    }


}

