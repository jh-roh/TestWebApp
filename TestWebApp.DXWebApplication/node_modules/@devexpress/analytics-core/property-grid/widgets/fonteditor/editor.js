/**
* DevExpress Analytics (property-grid\widgets\fonteditor\editor.js)
* Version:  22.1.5
* Build date: Sep 5, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.FontEditor = void 0;
var ko = require("knockout");
var _model_1 = require("./_model");
var propertygrid_1 = require("../../propertygrid");
var metadata_1 = require("./metadata");
var FontEditor = (function (_super) {
    __extends(FontEditor, _super);
    function FontEditor(info, level, parentDisabled, textToSearch) {
        return _super.call(this, info, level, parentDisabled, textToSearch) || this;
    }
    FontEditor.prototype.createObjectProperties = function () {
        var model = new _model_1.FontModel(this.value);
        this._disposables.push(model);
        return new propertygrid_1.ObjectProperties(ko.observable(model), { editors: metadata_1.fontInfo }, this.level + 1, this.disabled, undefined, this.textToSearch);
    };
    return FontEditor;
}(propertygrid_1.PropertyGridEditor));
exports.FontEditor = FontEditor;
