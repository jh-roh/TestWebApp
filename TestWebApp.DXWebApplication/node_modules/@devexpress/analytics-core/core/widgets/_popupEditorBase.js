/**
* DevExpress Analytics (core\widgets\_popupEditorBase.js)
* Version:  22.1.5
* Build date: Sep 5, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.PopupEditorBase = void 0;
var ko = require("knockout");
var _localization_1 = require("../../property-grid/localization/_localization");
var _localizationStringIds_1 = require("../../property-grid/localization/_localizationStringIds");
var utils_1 = require("../../serializer/utils");
var PopupEditorBase = (function (_super) {
    __extends(PopupEditorBase, _super);
    function PopupEditorBase() {
        var _this = _super.call(this) || this;
        _this.popupVisible = ko.observable(false);
        _this.buttonItems = [];
        _this._createMainPopupButtons();
        return _this;
    }
    PopupEditorBase.prototype._createMainPopupButtons = function () {
        var self = this;
        this._disposables.push(this._disableSaveButton = ko.pureComputed(function () { return !self.canSave(); }));
        this.buttonItems = [
            { toolbar: 'bottom', location: 'after', widget: 'dxButton', options: { text: this.saveLocalization, type: 'default', stylingMode: 'contained', onClick: function (sender) { self.save(sender); }, disabled: this._disableSaveButton } },
            { toolbar: 'bottom', location: 'after', widget: 'dxButton', options: { text: this.cancelLocalization, type: 'normal', stylingMode: 'contained', onClick: function () { self.close(); } } }
        ];
        this._disposables.push(this._disableSaveButton);
    };
    PopupEditorBase.prototype.canSave = function () {
        return true;
    };
    PopupEditorBase.prototype.save = function (sender) {
        this.popupVisible(false);
    };
    PopupEditorBase.prototype.close = function () {
        this.popupVisible(false);
    };
    Object.defineProperty(PopupEditorBase.prototype, "cancelLocalization", {
        get: function () {
            return _localization_1.getLocalization('Cancel', _localizationStringIds_1.StringId.DataAccessBtnCancel);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PopupEditorBase.prototype, "saveLocalization", {
        get: function () {
            return _localization_1.getLocalization('OK', _localizationStringIds_1.StringId.DataAccessBtnOK);
        },
        enumerable: false,
        configurable: true
    });
    return PopupEditorBase;
}(utils_1.Disposable));
exports.PopupEditorBase = PopupEditorBase;
