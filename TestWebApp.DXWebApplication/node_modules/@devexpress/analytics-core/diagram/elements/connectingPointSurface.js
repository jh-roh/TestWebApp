/**
* DevExpress Analytics (diagram\elements\connectingPointSurface.js)
* Version:  22.1.5
* Build date: Sep 5, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConnectingPointSurface = void 0;
var ko = require("knockout");
var diagramElementBaseSurface_1 = require("./diagramElementBaseSurface");
var ConnectingPointSurface = (function (_super) {
    __extends(ConnectingPointSurface, _super);
    function ConnectingPointSurface(control, context) {
        var _this = _super.call(this, control, context, ConnectingPointSurface._unitProperties) || this;
        _this.template = 'dxdd-connecting-point';
        _this.selectiontemplate = 'dxdd-connection-point-selection';
        _this.contenttemplate = '';
        return _this;
    }
    ConnectingPointSurface._unitProperties = {
        _x: function (o) {
            return ko.pureComputed(function () { return o.location.x() - o.parentModel().location.x(); });
        },
        _y: function (o) {
            return ko.pureComputed(function () { return o.location.y() - o.parentModel().location.y(); });
        }
    };
    return ConnectingPointSurface;
}(diagramElementBaseSurface_1.DiagramElementBaseSurface));
exports.ConnectingPointSurface = ConnectingPointSurface;
