/**
* DevExpress Analytics (diagram\controlRegistrator.js)
* Version:  22.1.5
* Build date: Sep 5, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.registerControls = void 0;
var metadata_1 = require("./metadata");
var elementViewModel_1 = require("../core/elements/elementViewModel");
var baseSurface_1 = require("../core/elements/baseSurface");
var connectorSurface_1 = require("./elements/connectors/connectorSurface");
var diagramElementBaseViewModel_1 = require("./elements/diagramElementBaseViewModel");
var connectorModel_1 = require("./elements/connectors/connectorModel");
var routedConnectorSurface_1 = require("./elements/connectors/routedConnectorSurface");
var routedConnectorModel_1 = require("./elements/connectors/routedConnectorModel");
var connectionPointModel_1 = require("./elements/connectors/connectionPointModel");
var connectionPointSurface_1 = require("./elements/connectors/connectionPointSurface");
var diagramModel_1 = require("./elements/diagramModel");
var diagramSurface_1 = require("./elements/diagramSurface");
var connectingPointModel_1 = require("./elements/connectingPointModel");
var connectingPointSurface_1 = require("./elements/connectingPointSurface");
var editorsInfo_1 = require("../property-grid/widgets/editorsInfo");
var diagramElementSurface_1 = require("./elements/diagramElementSurface");
var diagramElementViewModel_1 = require("./elements/diagramElementViewModel");
var controlsFactory_1 = require("./controlsFactory");
function registerControls() {
    controlsFactory_1.diagramControlsFactory.registerControl('Unknown', {
        info: metadata_1.unknownSerializationsInfo,
        type: elementViewModel_1.ElementViewModel,
        nonToolboxItem: true,
        surfaceType: baseSurface_1.SurfaceElementBase
    });
    controlsFactory_1.diagramControlsFactory.registerControl('Connector', {
        info: [
            metadata_1.name,
            { propertyName: 'location', displayName: 'Location', editor: editorsInfo_1.editorTemplates.getEditor('objecteditor') },
            { propertyName: 'startPoint', modelName: '@StartPoint', link: true },
            { propertyName: 'endPoint', modelName: '@EndPoint', link: true }
        ],
        surfaceType: connectorSurface_1.ConnectorSurface,
        type: connectorModel_1.ConnectorViewModel,
        elementActionsTypes: [],
        nonToolboxItem: false
    });
    controlsFactory_1.diagramControlsFactory.registerControl('RoutedConnector', {
        info: [
            metadata_1.name,
            { propertyName: 'location', displayName: 'Location', editor: editorsInfo_1.editorTemplates.getEditor('objecteditor') },
            { propertyName: 'startPoint', modelName: '@StartPoint', link: true },
            { propertyName: 'endPoint', modelName: '@EndPoint', link: true }
        ],
        surfaceType: routedConnectorSurface_1.RoutedConnectorSurface,
        type: routedConnectorModel_1.RoutedConnectorViewModel,
        elementActionsTypes: [],
        nonToolboxItem: false
    });
    controlsFactory_1.diagramControlsFactory.registerControl('ConnectionPoint', {
        info: connectionPointModel_1.connectionPointSerializationInfo,
        surfaceType: connectionPointSurface_1.ConnectionPointSurface,
        type: connectionPointModel_1.ConnectionPointViewModel,
        elementActionsTypes: [],
        nonToolboxItem: true
    });
    controlsFactory_1.diagramControlsFactory.registerControl('Diagram', {
        info: diagramModel_1.diagramSerializationsInfo,
        surfaceType: diagramSurface_1.DiagramSurface,
        popularProperties: ['name'],
        type: diagramModel_1.DiagramViewModel,
        elementActionsTypes: [],
        isContainer: true,
        nonToolboxItem: true
    });
    controlsFactory_1.diagramControlsFactory.registerControl('DiagramElement', {
        info: diagramElementBaseViewModel_1.diagramElementSerializationInfo,
        defaultVal: {
            '@SizeF': '150,50',
            'ConnectingPoints': {
                'Item1': {
                    '@ControlType': 'ConnectingPoint',
                    '@PercentOffsetX': '1',
                    '@PercentOffsetY': '0.5',
                },
                'Item2': {
                    '@ControlType': 'ConnectingPoint',
                    '@PercentOffsetX': '0.5',
                    '@PercentOffsetY': '1',
                },
                'Item3': {
                    '@ControlType': 'ConnectingPoint',
                    '@PercentOffsetX': '0.5',
                    '@PercentOffsetY': '0',
                },
                'Item4': {
                    '@ControlType': 'ConnectingPoint',
                    '@PercentOffsetX': '0',
                    '@PercentOffsetY': '0.5',
                }
            }
        },
        surfaceType: diagramElementSurface_1.DiagramElementSurface,
        popularProperties: ['text'],
        type: diagramElementViewModel_1.DiagramElementViewModel,
        elementActionsTypes: [],
        nonToolboxItem: false
    });
    controlsFactory_1.diagramControlsFactory.registerControl('Ellipse', {
        info: diagramElementBaseViewModel_1.diagramElementSerializationInfo,
        defaultVal: {
            '@SizeF': '150,50',
            '@Type': 'Ellipse',
            'ConnectingPoints': {
                'Item1': {
                    '@ControlType': 'ConnectingPoint',
                    '@PercentOffsetX': '1',
                    '@PercentOffsetY': '0.5',
                },
                'Item2': {
                    '@ControlType': 'ConnectingPoint',
                    '@PercentOffsetX': '0.5',
                    '@PercentOffsetY': '1',
                },
                'Item3': {
                    '@ControlType': 'ConnectingPoint',
                    '@PercentOffsetX': '0.5',
                    '@PercentOffsetY': '0',
                },
                'Item4': {
                    '@ControlType': 'ConnectingPoint',
                    '@PercentOffsetX': '0',
                    '@PercentOffsetY': '0.5',
                }
            }
        },
        surfaceType: diagramElementSurface_1.DiagramElementSurface,
        popularProperties: ['text'],
        type: diagramElementViewModel_1.DiagramElementViewModel,
        elementActionsTypes: [],
        nonToolboxItem: false
    });
    controlsFactory_1.diagramControlsFactory.registerControl('Condition', {
        info: diagramElementBaseViewModel_1.diagramElementSerializationInfo,
        defaultVal: {
            '@SizeF': '150,50',
            '@Type': 'Condition',
            'ConnectingPoints': {
                'Item1': {
                    '@ControlType': 'ConnectingPoint',
                    '@PercentOffsetX': '1',
                    '@PercentOffsetY': '0.5',
                },
                'Item2': {
                    '@ControlType': 'ConnectingPoint',
                    '@PercentOffsetX': '0.5',
                    '@PercentOffsetY': '1',
                },
                'Item3': {
                    '@ControlType': 'ConnectingPoint',
                    '@PercentOffsetX': '0.5',
                    '@PercentOffsetY': '0',
                },
                'Item4': {
                    '@ControlType': 'ConnectingPoint',
                    '@PercentOffsetX': '0',
                    '@PercentOffsetY': '0.5',
                }
            }
        },
        surfaceType: diagramElementSurface_1.DiagramElementSurface,
        popularProperties: ['text'],
        type: diagramElementViewModel_1.DiagramElementViewModel,
        elementActionsTypes: [],
        nonToolboxItem: false
    });
    controlsFactory_1.diagramControlsFactory.registerControl('ConnectingPoint', {
        info: connectingPointModel_1.connectingPointSerializationInfo,
        surfaceType: connectingPointSurface_1.ConnectingPointSurface,
        type: connectingPointModel_1.ConnectingPointViewModel,
        elementActionsTypes: [],
        nonToolboxItem: true
    });
}
exports.registerControls = registerControls;
