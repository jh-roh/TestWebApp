/**
* DevExpress Analytics (query-builder\utils\_queryBuilderTreeListController.js)
* Version:  22.1.5
* Build date: Sep 5, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.QueryBuilderTreeListController = void 0;
var _treelistController_1 = require("../../widgets/treelist/_treelistController");
var QueryBuilderTreeListController = (function (_super) {
    __extends(QueryBuilderTreeListController, _super);
    function QueryBuilderTreeListController(undoEngine, query, dragDropHandler) {
        var _this = _super.call(this) || this;
        _this.undoEngine = undoEngine;
        _this.query = query;
        _this._dragDropHandler = dragDropHandler.getDropCallback(undoEngine, true);
        return _this;
    }
    QueryBuilderTreeListController.prototype.dblClickHandler = function (item) {
        this.undoEngine().start();
        this._dragDropHandler(item, this.query());
        this.undoEngine().end();
    };
    return QueryBuilderTreeListController;
}(_treelistController_1.TreeListController));
exports.QueryBuilderTreeListController = QueryBuilderTreeListController;
