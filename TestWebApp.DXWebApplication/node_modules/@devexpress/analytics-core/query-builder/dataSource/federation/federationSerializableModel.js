/**
* DevExpress Analytics (query-builder\dataSource\federation\federationSerializableModel.js)
* Version:  22.1.5
* Build date: Sep 5, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.SerializableDataFederationDataSource = void 0;
var ko = require("knockout");
var serializer_1 = require("../../../serializer/serializer");
var utils_1 = require("../../../serializer/utils");
var SerializableDataFederationDataSource = (function (_super) {
    __extends(SerializableDataFederationDataSource, _super);
    function SerializableDataFederationDataSource(dataSource, serializer) {
        var _this = _super.call(this) || this;
        _this.dataSources = ko.observableArray([]);
        _this.serializer = serializer || new serializer_1.ModelSerializer();
        if (dataSource) {
            _this.dataSource = dataSource;
            _this.dataSources(_this._currentDataSources);
        }
        return _this;
    }
    Object.defineProperty(SerializableDataFederationDataSource.prototype, "_currentDataSources", {
        get: function () {
            var dataSources = [];
            this.dataSource && this.dataSource.serializableSourceMap().reduce(function (result, x) {
                if (result.indexOf(x.dataSource()) === -1)
                    result.push(x.dataSource());
                return result;
            }, dataSources);
            return dataSources;
        },
        enumerable: false,
        configurable: true
    });
    SerializableDataFederationDataSource.prototype._collectDependentDataSources = function (item, resultArray) {
        var _this = this;
        if (item.serializableSourceMap) {
            item.serializableSourceMap().forEach(function (x) { return _this._collectDependentDataSources(x.dataSource(), resultArray); });
        }
        var existedItem = resultArray.filter(function (x) { return ko.unwrap(x.name) === ko.unwrap(item.name); })[0];
        !existedItem && resultArray.push(item);
    };
    SerializableDataFederationDataSource.prototype.dispose = function () {
        this.dataSource = null;
        this.dataSources = null;
    };
    SerializableDataFederationDataSource.prototype.getInfo = function () {
        return [
            { propertyName: 'dataSources', modelName: 'dataSources', array: true },
            { propertyName: 'dataSource', modelName: 'dataSource' }
        ];
    };
    SerializableDataFederationDataSource.prototype.collectDependentDataSources = function () {
        var _this = this;
        var dependentDataSources = [];
        this._currentDataSources.forEach(function (item) { return _this._collectDependentDataSources(item, dependentDataSources); });
        return dependentDataSources;
    };
    SerializableDataFederationDataSource.prototype.serialize = function () {
        var clonedModel = new SerializableDataFederationDataSource(null);
        clonedModel.dataSource = this.dataSource;
        clonedModel.dataSources(this.collectDependentDataSources());
        var serializedModel = this.serializer.serialize(clonedModel);
        clonedModel.dispose();
        return serializedModel;
    };
    SerializableDataFederationDataSource.prototype.getSerializableFederationDataSourceInfo = function () {
        var serializedModel = this.serialize();
        return {
            dataSource: JSON.stringify(serializedModel.dataSource),
            dataSources: Object.keys(serializedModel.dataSources).map(function (key) { return JSON.stringify(serializedModel.dataSources[key]); })
        };
    };
    return SerializableDataFederationDataSource;
}(utils_1.Disposable));
exports.SerializableDataFederationDataSource = SerializableDataFederationDataSource;
