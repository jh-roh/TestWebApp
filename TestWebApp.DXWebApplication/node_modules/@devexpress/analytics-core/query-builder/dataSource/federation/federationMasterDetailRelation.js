/**
* DevExpress Analytics (query-builder\dataSource\federation\federationMasterDetailRelation.js)
* Version:  22.1.5
* Build date: Sep 5, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.FederationMasterDetailRelation = void 0;
var serializer_1 = require("../../../serializer/serializer");
var _utils_1 = require("../../../serializer/_utils");
var masterDetailRelation_1 = require("../sql/masterDetailRelation");
var keyColumnInfoArray = [
    { propertyName: 'masterColumn', modelName: '@Parent' },
    { propertyName: 'detailColumn', modelName: '@Nested' },
    { propertyName: 'itemType', modelName: '@ItemType' }
];
var masterDetailRelationSerializationInfoArray = [
    { propertyName: 'masterQuery', modelName: '@MasterQueryName' },
    { propertyName: 'detailQuery', modelName: '@DetailQueryName' },
    { propertyName: '_customName', modelName: '@RelationName' },
    { propertyName: 'keyColumns', modelName: 'KeyColumns', array: true, info: keyColumnInfoArray },
    { propertyName: 'itemType', modelName: '@ItemType' }
];
var FederationMasterDetailRelation = (function (_super) {
    __extends(FederationMasterDetailRelation, _super);
    function FederationMasterDetailRelation(model, serializer) {
        var _this = _super.call(this, model, serializer) || this;
        _this.getInfo = function () { return masterDetailRelationSerializationInfoArray; };
        if (model['@MasterQueryName'] && model['@DetailQueryName']) {
            (serializer || new serializer_1.ModelSerializer()).deserialize(_this, _utils_1.extend(model, { '@ItemType': 'Relation' }));
        }
        return _this;
    }
    FederationMasterDetailRelation.create = function (relation) {
        var serializer = new serializer_1.ModelSerializer();
        var relation = new FederationMasterDetailRelation(serializer.serialize(relation), serializer);
        relation.keyColumns().forEach(function (x) { return x['getInfo'] = function () { return keyColumnInfoArray; }; });
        return relation;
    };
    return FederationMasterDetailRelation;
}(masterDetailRelation_1.MasterDetailRelation));
exports.FederationMasterDetailRelation = FederationMasterDetailRelation;
