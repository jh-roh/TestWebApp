/**
* DevExpress Analytics (query-builder\dataSource\federation\federationSource.js)
* Version:  22.1.5
* Build date: Sep 5, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.FederationSource = void 0;
var serializer_1 = require("../../../serializer/serializer");
var utils_1 = require("../../../serializer/utils");
var _utils_1 = require("../../../serializer/_utils");
var federationDataSourceMeta_1 = require("./federationDataSourceMeta");
var FederationSource = (function (_super) {
    __extends(FederationSource, _super);
    function FederationSource(model, serializer, path, sourceName) {
        var _this = _super.call(this) || this;
        serializer = serializer || new serializer_1.ModelSerializer();
        if (path) {
            var pathParts = path.split('.');
            if (pathParts.length > 1) {
                model['@DataMember'] = pathParts.slice(1).join('_');
            }
        }
        if (sourceName) {
            model['@SourceName'] = sourceName;
        }
        serializer.deserialize(_this, _utils_1.extend(model, { '@ItemType': 'Source' }));
        return _this;
    }
    FederationSource.prototype.getInfo = function () {
        return federationDataSourceMeta_1.sourceSerializationInfo;
    };
    FederationSource.prototype.getDataSourceName = function () {
        return this.hasDataMember() ? this.sourceName().slice(0, this.sourceName().lastIndexOf(this.dataMember()) - 1)
            : this.sourceName();
    };
    FederationSource.prototype.getPath = function () {
        return this.getDataSourceName() + (this.hasDataMember() ? '.' + this.dataMember() : '');
    };
    FederationSource.prototype.hasDataMember = function () {
        return this.dataMember() && this.sourceName().lastIndexOf(this.dataMember()) !== 0;
    };
    return FederationSource;
}(utils_1.Disposable));
exports.FederationSource = FederationSource;
