/**
* DevExpress Analytics (query-builder\widgets\_undoEditor.js)
* Version:  22.1.5
* Build date: Sep 5, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.UndoEditor = void 0;
var ko = require("knockout");
var editor_1 = require("../../property-grid/widgets/editor");
var UndoEditor = (function (_super) {
    __extends(UndoEditor, _super);
    function UndoEditor(info, level, parentDisabled, textToSearch) {
        return _super.call(this, info, level, parentDisabled, textToSearch) || this;
    }
    UndoEditor.prototype.generateValue = function (undoEngine) {
        var _this = this;
        if (!this.undoValue) {
            this._disposables.push(this.undoValue = ko.computed({
                read: function () {
                    return _this.value();
                },
                write: function (val) {
                    undoEngine().start();
                    _this.value(val);
                    undoEngine().end();
                }
            }));
        }
        return this.undoValue;
    };
    return UndoEditor;
}(editor_1.Editor));
exports.UndoEditor = UndoEditor;
