/**
* DevExpress Analytics (query-builder\widgets\_rightPanelSwitcher.js)
* Version:  22.1.5
* Build date: Sep 5, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.RightPanelSwitcher = void 0;
var ko = require("knockout");
var utils_1 = require("../../serializer/utils");
var RightPanelSwitcher = (function (_super) {
    __extends(RightPanelSwitcher, _super);
    function RightPanelSwitcher(collapsed, editableObj, visibleCondition, getDisplayName) {
        if (visibleCondition === void 0) { visibleCondition = function (_) { return true; }; }
        var _this = _super.call(this) || this;
        _this.editableObj = editableObj;
        _this.getDisplayName = getDisplayName;
        _this._collapsed = collapsed;
        _this._disposables.push(_this.visible = ko.pureComputed(function () {
            return !_this.disabled() && !_this._collapsed();
        }));
        _this._disposables.push(_this.disabled = ko.pureComputed(function () {
            var disabled = !editableObj() || !visibleCondition(editableObj());
            if (disabled && !_this._collapsed())
                _this._collapsed(true);
            return disabled;
        }));
        return _this;
    }
    RightPanelSwitcher.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this._collapsed = null;
    };
    RightPanelSwitcher.prototype.toogle = function () {
        this._collapsed(!this._collapsed());
    };
    Object.defineProperty(RightPanelSwitcher.prototype, "title", {
        get: function () {
            return this.getDisplayName(this.editableObj());
        },
        enumerable: false,
        configurable: true
    });
    return RightPanelSwitcher;
}(utils_1.Disposable));
exports.RightPanelSwitcher = RightPanelSwitcher;
