/**
* DevExpress Analytics (query-builder\binding\jsQueryBuilder.js)
* Version:  22.1.5
* Build date: Sep 5, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.JSQueryBuilder = void 0;
var localization_utils_1 = require("../../property-grid/localization/localization_utils");
var _infoMessageHelpers_1 = require("../../core/utils/_infoMessageHelpers");
var _dataConnection_1 = require("../utils/_dataConnection");
var JSQueryBuilder = (function () {
    function JSQueryBuilder(_queryBuilderModel) {
        this._queryBuilderModel = _queryBuilderModel;
    }
    Object.defineProperty(JSQueryBuilder.prototype, "queryBuilderModel", {
        get: function () {
            return this._queryBuilderModel();
        },
        set: function (newVal) {
            this._queryBuilderModel(newVal);
        },
        enumerable: false,
        configurable: true
    });
    JSQueryBuilder.prototype.UpdateLocalization = function (localization) {
        localization_utils_1.updateLocalization(localization);
    };
    JSQueryBuilder.prototype.GetQueryBuilderModel = function () {
        return this.queryBuilderModel;
    };
    JSQueryBuilder.prototype.GetJsonQueryModel = function () {
        return { 'Query': this.queryBuilderModel.model().serialize() };
    };
    JSQueryBuilder.prototype.GetSaveQueryModel = function () {
        return {
            queryLayout: JSON.stringify(this.GetJsonQueryModel()),
            connection: this.SerializeDataConnection()
        };
    };
    JSQueryBuilder.prototype.SerializeDataConnection = function () {
        var connection = this.queryBuilderModel.model().dbSchemaProvider.connection;
        return _dataConnection_1.serializeDataConnection(connection);
    };
    JSQueryBuilder.prototype.AdjustControlCore = function () {
        this.queryBuilderModel && this.queryBuilderModel.updateSurfaceSize();
    };
    JSQueryBuilder.prototype.Save = function () {
        this.queryBuilderModel && this.queryBuilderModel.model().onSave();
    };
    JSQueryBuilder.prototype.ShowPreview = function () {
        this.queryBuilderModel && this.queryBuilderModel.showPreview();
    };
    JSQueryBuilder.prototype.IsQueryValid = function () {
        return this.queryBuilderModel && this.queryBuilderModel.model().isValid();
    };
    JSQueryBuilder.prototype.OnCallback = function (result) {
        if (result.queryValidationError) {
            _infoMessageHelpers_1.NotifyAboutWarning(result.queryValidationError, true);
        }
    };
    return JSQueryBuilder;
}());
exports.JSQueryBuilder = JSQueryBuilder;
