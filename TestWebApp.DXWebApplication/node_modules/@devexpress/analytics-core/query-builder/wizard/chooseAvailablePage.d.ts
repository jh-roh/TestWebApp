/**
* DevExpress Analytics (query-builder\wizard\chooseAvailablePage.d.ts)
* Version:  22.1.5
* Build date: Sep 5, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
/// <reference types="jquery" />
import * as ko from 'knockout';
import { IDataSourceInfo } from '../../core/utils/_fieldListProvider';
import { WizardPageBase } from './pages/wizardPageBase';
import { IWizardPage } from './pages/IWizardPage';
export interface IChooseAvailableItemPageOperation {
    text: string;
    createNew: boolean;
}
export declare class ChooseAvailableItemPage extends WizardPageBase {
    items: ko.Subscribable<any[]>;
    constructor(items: ko.Subscribable<any[]>, canCreateNew?: boolean);
    canNext(): boolean;
    canCreateNew: ko.Observable<boolean>;
    selectedItems: ko.ObservableArray<IDataSourceInfo>;
    operations: IChooseAvailableItemPageOperation[];
    selectedOperation: ko.Observable<IChooseAvailableItemPageOperation>;
    _createNew: ko.PureComputed<boolean>;
    initialize(state: any): JQueryPromise<IWizardPage>;
    _displayExpr(item: any): string;
    _getSelectedItem(state?: any): IDataSourceInfo;
    onDblClick(): void;
    get createNewOperationText(): string;
    get existingOperationText(): string;
}
