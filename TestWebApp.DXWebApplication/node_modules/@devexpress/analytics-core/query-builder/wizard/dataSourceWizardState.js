/**
* DevExpress Analytics (query-builder\wizard\dataSourceWizardState.js)
* Version:  22.1.5
* Build date: Sep 5, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports._createDefaultDataSourceWizardState = exports._restoreObjectDataSourceFromState = exports._resetRestoreJsonDataSourceFromState = exports._setRestoreJsonDataSourceFromState = exports._restoreJsonDataSourceFromState = exports._restoreFederationDataSourceFromState = exports._resetRestoreSqlDataSourceFromState = exports._setRestoreSqlDataSourceFromState = exports._restoreSqlDataSourceFromState = void 0;
var chooseDataSourceTypePage_1 = require("./pages/chooseDataSourceTypePage");
var serializer_1 = require("../../serializer/serializer");
var masterDetailRelation_1 = require("../dataSource/sql/masterDetailRelation");
var _utils_1 = require("../../undo-engine/_utils");
var jsonDataSource_1 = require("../dataSource/json/jsonDataSource");
var objectDataSource_1 = require("../dataSource/object/objectDataSource");
var federationDataSource_1 = require("../dataSource/federation/federationDataSource");
var federationMasterDetailRelation_1 = require("../dataSource/federation/federationMasterDetailRelation");
var _sqlDataSourceWrapper_1 = require("./pages/sqlDataSourceWizard/_sqlDataSourceWrapper");
var _defaultRestoreSqlDataSourceFromState = function (state, requestWrapper, dataSourceId) {
    var _a, _b;
    var wrapper = new _sqlDataSourceWrapper_1._SqlDataSourceWrapper(state.sqlDataSourceJSON, state.queryName, requestWrapper);
    state.name && wrapper.sqlDataSource.connection.name(state.name);
    var serializer = new serializer_1.ModelSerializer();
    if (state.customQueries && state.customQueries.length > 0) {
        wrapper.customQueries = state.customQueries.map(function (query) {
            return wrapper.sqlDataSource.createQuery(JSON.parse(query), serializer);
        });
        (_a = wrapper.sqlDataSource.queries).push.apply(_a, wrapper.customQueries);
    }
    if (state.relations && state.relations.length > 0) {
        (_b = wrapper.sqlDataSource.relations).push.apply(_b, state.relations.map(function (relation) {
            return new masterDetailRelation_1.MasterDetailRelation(JSON.parse(relation), serializer);
        }));
    }
    wrapper.sqlDataSource.id = dataSourceId || _utils_1.guid().replace(/-/g, '');
    return wrapper;
};
exports._restoreSqlDataSourceFromState = _defaultRestoreSqlDataSourceFromState;
var _setRestoreSqlDataSourceFromState = function (func) { return exports._restoreSqlDataSourceFromState = func; };
exports._setRestoreSqlDataSourceFromState = _setRestoreSqlDataSourceFromState;
var _resetRestoreSqlDataSourceFromState = function () { return exports._restoreSqlDataSourceFromState = _defaultRestoreSqlDataSourceFromState; };
exports._resetRestoreSqlDataSourceFromState = _resetRestoreSqlDataSourceFromState;
var _defaultRestoreFederationDataSourceFromState = function (state, usedDataSources, dataSourceId) {
    var _a;
    var dataSource = new federationDataSource_1.FederationDataSource(JSON.parse(state.federationDataSourceJSON), usedDataSources);
    if (dataSourceId) {
        dataSource.id = dataSourceId;
    }
    if (state.relations && state.relations.length > 0) {
        (_a = dataSource.relations).push.apply(_a, state.relations.map(function (relation) {
            return new federationMasterDetailRelation_1.FederationMasterDetailRelation(JSON.parse(relation), new serializer_1.ModelSerializer());
        }));
    }
    return dataSource;
};
exports._restoreFederationDataSourceFromState = _defaultRestoreFederationDataSourceFromState;
var _defaultRestoreJsonDataSourceFromState = function (state, requestWrapper, dataSourceId) {
    var jsonDataSource = new jsonDataSource_1.JsonDataSource({
        'Source': state.jsonSource && JSON.parse(state.jsonSource) || {},
        'Schema': state.jsonScheme && JSON.parse(state.jsonScheme) || {},
        '@RootElement': state.rootElement || ''
    }, undefined, requestWrapper);
    state.connectionName && jsonDataSource.connectionName(state.connectionName);
    state.dataSourceName && jsonDataSource.name(state.dataSourceName);
    jsonDataSource.id = dataSourceId || _utils_1.guid().replace(/-/g, '');
    return jsonDataSource;
};
exports._restoreJsonDataSourceFromState = _defaultRestoreJsonDataSourceFromState;
function _setRestoreJsonDataSourceFromState(func) { exports._restoreJsonDataSourceFromState = func; }
exports._setRestoreJsonDataSourceFromState = _setRestoreJsonDataSourceFromState;
function _resetRestoreJsonDataSourceFromState() { exports._restoreJsonDataSourceFromState = _defaultRestoreJsonDataSourceFromState; }
exports._resetRestoreJsonDataSourceFromState = _resetRestoreJsonDataSourceFromState;
function _restoreObjectDataSourceFromState(state, requestWrapper, dataSourceId) {
    var objectDataSource = new objectDataSource_1.ObjectDataSource();
    objectDataSource.setState(state);
    if (dataSourceId)
        objectDataSource.id = dataSourceId;
    return objectDataSource;
}
exports._restoreObjectDataSourceFromState = _restoreObjectDataSourceFromState;
function _createDefaultDataSourceWizardState(sqlDataSourceWizardState, jsonDataSourceWizardState, objectDataSourceWizardState, federationDataSourceWizardState) {
    if (sqlDataSourceWizardState === void 0) { sqlDataSourceWizardState = {}; }
    if (jsonDataSourceWizardState === void 0) { jsonDataSourceWizardState = { jsonSource: '' }; }
    if (objectDataSourceWizardState === void 0) { objectDataSourceWizardState = {}; }
    if (federationDataSourceWizardState === void 0) { federationDataSourceWizardState = {}; }
    return {
        dataSourceType: chooseDataSourceTypePage_1.DataSourceType.Sql,
        jsonDataSourceWizard: jsonDataSourceWizardState,
        sqlDataSourceWizard: sqlDataSourceWizardState,
        objectDataSourceWizard: objectDataSourceWizardState,
        federationDataSourceWizard: federationDataSourceWizardState,
        dataSourceId: _utils_1.guid().replace(/-/g, '')
    };
}
exports._createDefaultDataSourceWizardState = _createDefaultDataSourceWizardState;
