/**
* DevExpress Analytics (query-builder\wizard\pages\sqlDataSourceWizard\_sqlDataSourceWrapper.js)
* Version:  22.1.5
* Build date: Sep 5, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports._SqlDataSourceWrapper = void 0;
var sqlDataSource_1 = require("../../../dataSource/sql/sqlDataSource");
var serializer_1 = require("../../../../serializer/serializer");
var _SqlDataSourceWrapper = (function () {
    function _SqlDataSourceWrapper(sqlDataSourceJSON, queryName, requestWrapper) {
        var _this = this;
        this.sqlDataSourceJSON = sqlDataSourceJSON;
        this.customQueries = [];
        this.sqlDataSource = new sqlDataSource_1.SqlDataSource(sqlDataSourceJSON ? JSON.parse(sqlDataSourceJSON) : {}, undefined, requestWrapper);
        if (queryName) {
            this.sqlDataSource.queries().some(function (value, index) {
                if (value.name() === queryName) {
                    _this._queryIndex = index;
                    return true;
                }
                return false;
            });
        }
        else {
            this._queryIndex = this.sqlDataSource.queries().length;
        }
    }
    Object.defineProperty(_SqlDataSourceWrapper.prototype, "sqlQuery", {
        get: function () {
            return this.sqlDataSource.queries()[this._queryIndex];
        },
        set: function (val) {
            if (val)
                val.parent = this.sqlDataSource;
            this.sqlDataSource.queries()[this._queryIndex] = val;
        },
        enumerable: false,
        configurable: true
    });
    _SqlDataSourceWrapper.prototype.saveCustomQueries = function () {
        var serializer = new serializer_1.ModelSerializer();
        return this.customQueries.length > 0 && this.customQueries.map(function (x) { return JSON.stringify(serializer.serialize(x)); });
    };
    _SqlDataSourceWrapper.prototype.save = function () {
        return JSON.stringify(new serializer_1.ModelSerializer().serialize(this.sqlDataSource));
    };
    return _SqlDataSourceWrapper;
}());
exports._SqlDataSourceWrapper = _SqlDataSourceWrapper;
