/**
* DevExpress Analytics (query-builder\wizard\pages\federationDataSourceWizard\federatedMasterDetailRelationshipsPage.js)
* Version:  22.1.5
* Build date: Sep 5, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports._registerFederatedMasterDetailRelationshipsPage = exports.FederatedMasterDetailRelationshipsPage = void 0;
var ko = require("knockout");
var $ = require("jquery");
var dataSourceWizardState_1 = require("../../dataSourceWizardState");
var serializer_1 = require("../../../../serializer/serializer");
var pageId_1 = require("../../pageId");
var localization_utils_1 = require("../../../../property-grid/localization/localization_utils");
var masterDetailRelationshipsPageBase_1 = require("../multiQueryWizard/masterDetailRelationshipsPageBase");
var federationMasterDetailRelation_1 = require("../../../dataSource/federation/federationMasterDetailRelation");
var FederatedMasterDetailRelationshipsPage = (function (_super) {
    __extends(FederatedMasterDetailRelationshipsPage, _super);
    function FederatedMasterDetailRelationshipsPage(federationDataSourceResultSchema, _options) {
        var _this = _super.call(this, federationDataSourceResultSchema) || this;
        _this._options = _options;
        _this._customResetOptions = $.noop;
        _this._relationsEditor = ko.observable(null);
        return _this;
    }
    FederatedMasterDetailRelationshipsPage.prototype._restoreDataSource = function (state) {
        this._federationDataSource = dataSourceWizardState_1._restoreFederationDataSourceFromState(state, this._options.dataSources);
    };
    FederatedMasterDetailRelationshipsPage.prototype._dataSource = function () {
        return this._federationDataSource;
    };
    FederatedMasterDetailRelationshipsPage.prototype.commit = function () {
        this.relationsSubscription.dispose();
        var relations = this._relations().map(function (x) { return federationMasterDetailRelation_1.FederationMasterDetailRelation.create(x); });
        this._federationDataSource.relations(relations);
        this._federationDataSource.resultSet = this._resultSet;
        var serializer = new serializer_1.ModelSerializer();
        return $.Deferred().resolve({
            federationDataSourceJSON: JSON.stringify(new serializer_1.ModelSerializer().serialize(this._federationDataSource)),
            relations: relations.map(function (x) { return JSON.stringify(serializer.serialize(x)); }),
        }).promise();
    };
    return FederatedMasterDetailRelationshipsPage;
}(masterDetailRelationshipsPageBase_1.MasterDetailRelationshipsPageBase));
exports.FederatedMasterDetailRelationshipsPage = FederatedMasterDetailRelationshipsPage;
function _registerFederatedMasterDetailRelationshipsPage(factory, federationDataSourceResultSchema, wizardOptions) {
    factory.registerMetadata(pageId_1.FederationDataSourceWizardPageId.FederatedMasterDetailRelationshipsPage, {
        create: function () {
            return new FederatedMasterDetailRelationshipsPage(federationDataSourceResultSchema, wizardOptions);
        },
        setState: function (data, state) {
            state.relations = data.relations;
        },
        getState: function (state) {
            return state.federationDataSourceWizard;
        },
        resetState: function (state, defaultState) {
            state.relations = defaultState.relations;
        },
        description: localization_utils_1.getLocalization('Configure master-detail relationships.', 'AnalyticsCoreStringId.SqlDSWizard_PageConfigureMasterDetailRelations'),
        template: 'dxrd-wizard-configure-relations-page'
    });
}
exports._registerFederatedMasterDetailRelationshipsPage = _registerFederatedMasterDetailRelationshipsPage;
