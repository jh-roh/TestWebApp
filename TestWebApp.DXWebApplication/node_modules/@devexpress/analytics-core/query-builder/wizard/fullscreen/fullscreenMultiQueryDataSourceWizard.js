/**
* DevExpress Analytics (query-builder\wizard\fullscreen\fullscreenMultiQueryDataSourceWizard.js)
* Version:  22.1.5
* Build date: Sep 5, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports._createDataSourceFullscreenWizard = exports.FullscreenDataSourceWizardPageIterator = exports.FullscreenDataSourceWizard = void 0;
var localization_utils_1 = require("../../../property-grid/localization/localization_utils");
var _utils_1 = require("../../../serializer/_utils");
var pageId_1 = require("../pageId");
var pageIterator_1 = require("../pageIterator");
var chooseDataSourceTypePage_1 = require("../pages/chooseDataSourceTypePage");
var fullscreenWizard_1 = require("./fullscreenWizard");
var fullscreenWizardPageFactory_1 = require("./fullscreenWizardPageFactory");
var specifyFederationDataSourceSettingsPage_1 = require("./pages/specifyFederationDataSourceSettingsPage");
var specifyJsonDataSourceSettingsPage_1 = require("./pages/specifyJsonDataSourceSettingsPage");
var specifyObjectDataSourceSettingsPage_1 = require("./pages/specifyObjectDataSourceSettingsPage");
var specifySqlDataSourceSettingsPage_1 = require("./pages/specifySqlDataSourceSettingsPage");
var FullscreenDataSourceWizard = (function (_super) {
    __extends(FullscreenDataSourceWizard, _super);
    function FullscreenDataSourceWizard(factory, _dataSourceWizardOptions) {
        var _this = _super.call(this, factory, _dataSourceWizardOptions.callbacks.finishCallback) || this;
        _this._dataSourceWizardOptions = _dataSourceWizardOptions;
        return _this;
    }
    FullscreenDataSourceWizard.prototype.initialize = function (state, createIterator) {
        var _this = this;
        if (createIterator === void 0) { createIterator = function (pageFactory, stateManager) { return new FullscreenDataSourceWizardPageIterator(pageFactory, stateManager, _this._dataSourceWizardOptions, function (page) { return _this._onResetPage(page); }); }; }
        if (this._dataSourceWizardOptions.sqlDataSourceAvailable || !_utils_1.isEmptyObject(state.sqlDataSourceWizard)) {
            state.dataSourceType = chooseDataSourceTypePage_1.DataSourceType.Sql;
        }
        else if (this._dataSourceWizardOptions.jsonDataSourceAvailable || state.jsonDataSourceWizard.jsonSource) {
            state.dataSourceType = chooseDataSourceTypePage_1.DataSourceType.Json;
        }
        else if (this._dataSourceWizardOptions.objectDataSourceAvailable || !_utils_1.isEmptyObject(state.objectDataSourceWizard)) {
            state.dataSourceType = chooseDataSourceTypePage_1.DataSourceType.Object;
        }
        _super.prototype.initialize.call(this, state, createIterator);
    };
    FullscreenDataSourceWizard.prototype.canRunWizard = function () {
        return this._dataSourceWizardOptions.canCreateDataSource;
    };
    FullscreenDataSourceWizard.prototype._description = function () {
        return localization_utils_1.getLocalization('Data Source Wizard', 'AnalyticsCoreStringId.DSWizard_Title');
    };
    return FullscreenDataSourceWizard;
}(fullscreenWizard_1.FullscreenWizard));
exports.FullscreenDataSourceWizard = FullscreenDataSourceWizard;
var FullscreenDataSourceWizardPageIterator = (function (_super) {
    __extends(FullscreenDataSourceWizardPageIterator, _super);
    function FullscreenDataSourceWizardPageIterator(factory, stateManager, _dataSourceOptions, onResetPage) {
        var _this = _super.call(this, factory, stateManager, onResetPage) || this;
        _this._dataSourceOptions = _dataSourceOptions;
        return _this;
    }
    FullscreenDataSourceWizardPageIterator.prototype.getNextPageId = function (pageId) {
        if (!pageId && this._isMoreThanOneDataSourceTypeAvailable(this._dataSourceOptions))
            return pageId_1.DataSourceWizardPageId.ChooseDataSourceTypePage;
        else if (!pageId && this._dataSourceOptions.sqlDataSourceAvailable) {
            return pageId_1.FullscreenDataSourceWizardPageId.SpecifySqlDataSourceSettingsPage;
        }
        else if (!pageId && this._dataSourceOptions.jsonDataSourceAvailable) {
            return pageId_1.FullscreenDataSourceWizardPageId.SpecifyJsonDataSourceSettingsPage;
        }
        else if (!pageId && this._dataSourceOptions.objectDataSourceAvailable) {
            return pageId_1.FullscreenDataSourceWizardPageId.SpecifyObjectDataSourceSettingsPage;
        }
        else if (pageId === pageId_1.DataSourceWizardPageId.ChooseDataSourceTypePage && this._getCurrentState().dataSourceType === chooseDataSourceTypePage_1.DataSourceType.Json) {
            return pageId_1.FullscreenDataSourceWizardPageId.SpecifyJsonDataSourceSettingsPage;
        }
        else if (pageId === pageId_1.DataSourceWizardPageId.ChooseDataSourceTypePage && this._getCurrentState().dataSourceType === chooseDataSourceTypePage_1.DataSourceType.Sql) {
            return pageId_1.FullscreenDataSourceWizardPageId.SpecifySqlDataSourceSettingsPage;
        }
        else if (pageId === pageId_1.DataSourceWizardPageId.ChooseDataSourceTypePage && this._getCurrentState().dataSourceType === chooseDataSourceTypePage_1.DataSourceType.Object) {
            return pageId_1.FullscreenDataSourceWizardPageId.SpecifyObjectDataSourceSettingsPage;
        }
        else if (pageId === pageId_1.DataSourceWizardPageId.ChooseDataSourceTypePage && this._getCurrentState().dataSourceType === chooseDataSourceTypePage_1.DataSourceType.Federation) {
            return pageId_1.FullscreenDataSourceWizardPageId.SpecifyFederationDataSourceSettingsPage;
        }
    };
    return FullscreenDataSourceWizardPageIterator;
}(pageIterator_1.PageIterator));
exports.FullscreenDataSourceWizardPageIterator = FullscreenDataSourceWizardPageIterator;
function _createDataSourceFullscreenWizard(dataSourceWizardOptions) {
    var factory = new fullscreenWizardPageFactory_1.FullscreenWizardPageFactory();
    chooseDataSourceTypePage_1._registerChooseDataSourceTypePage(factory, dataSourceWizardOptions);
    factory.getMetadata(pageId_1.DataSourceWizardPageId.ChooseDataSourceTypePage).navigationPanelText = localization_utils_1.getLocalization('Select Data Source Type', 'AnalyticsCoreStringId.Wizard_SelectDataSourceType');
    specifySqlDataSourceSettingsPage_1._registerSpecifySqlDataSourceSettingsPage(factory, dataSourceWizardOptions);
    specifyFederationDataSourceSettingsPage_1._registerSpecifyFederationDataSourceSettingsPage(factory, dataSourceWizardOptions);
    specifyJsonDataSourceSettingsPage_1._registerSpecifyJsonDataSourceSettingsPage(factory, dataSourceWizardOptions);
    specifyObjectDataSourceSettingsPage_1._registerSpecifyObjectDataSourceSettingsPage(factory, dataSourceWizardOptions);
    return new FullscreenDataSourceWizard(factory, dataSourceWizardOptions);
}
exports._createDataSourceFullscreenWizard = _createDataSourceFullscreenWizard;
