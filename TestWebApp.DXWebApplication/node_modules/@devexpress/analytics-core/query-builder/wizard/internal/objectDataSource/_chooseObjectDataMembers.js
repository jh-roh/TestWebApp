/**
* DevExpress Analytics (query-builder\wizard\internal\objectDataSource\_chooseObjectDataMembers.js)
* Version:  22.1.5
* Build date: Sep 5, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChooseObjectDataMembers = void 0;
var ko = require("knockout");
var utils_1 = require("../../../../serializer/utils");
var ChooseObjectDataMembers = (function (_super) {
    __extends(ChooseObjectDataMembers, _super);
    function ChooseObjectDataMembers(type, ctor) {
        var _this = _super.call(this) || this;
        _this.dataMembers = ko.observableArray([]);
        _this.selectedDataMembers = ko.observableArray([]);
        var oldType = type() && type().name;
        _this._disposables.push(ctor.subscribe(function (newVal) {
            type().updateMembers(newVal);
            if (oldType != type().name) {
                _this.dataMembers(type().members);
                _this.selectedDataMembers([]);
                oldType = type().name;
            }
            _this.coerceSelection();
        }));
        return _this;
    }
    ChooseObjectDataMembers.prototype.coerceSelection = function () {
        var selectedMember = this.selectedDataMembers()[0];
        var bestItem = selectedMember && selectedMember.isAvailable() ? selectedMember : this.dataMembers().filter(function (a) { return a.isAvailable(); })[0];
        this.selectedDataMembers([bestItem]);
    };
    return ChooseObjectDataMembers;
}(utils_1.Disposable));
exports.ChooseObjectDataMembers = ChooseObjectDataMembers;
