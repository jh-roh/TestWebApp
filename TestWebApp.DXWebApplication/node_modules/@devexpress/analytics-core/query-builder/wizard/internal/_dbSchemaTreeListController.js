/**
* DevExpress Analytics (query-builder\wizard\internal\_dbSchemaTreeListController.js)
* Version:  22.1.5
* Build date: Sep 5, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.DBSchemaTreeListController = void 0;
var _treelistController_1 = require("../../../widgets/treelist/_treelistController");
var _treeListNode_1 = require("./_treeListNode");
var DBSchemaTreeListController = (function (_super) {
    __extends(DBSchemaTreeListController, _super);
    function DBSchemaTreeListController(_customizeDBSchemaTreeListActions) {
        var _this = _super.call(this) || this;
        _this._customizeDBSchemaTreeListActions = _customizeDBSchemaTreeListActions;
        return _this;
    }
    DBSchemaTreeListController.prototype.getActions = function (value) {
        if (!value.data)
            return [];
        if (!(value.data instanceof _treeListNode_1.QueriesTreeNode || value.data instanceof _treeListNode_1.TreeQueryNode))
            return [];
        var result = value.data.getActions(value);
        this._customizeDBSchemaTreeListActions && this._customizeDBSchemaTreeListActions(value.data, result);
        return result;
    };
    DBSchemaTreeListController.prototype.canSelect = function (value) {
        return true;
    };
    return DBSchemaTreeListController;
}(_treelistController_1.TreeListController));
exports.DBSchemaTreeListController = DBSchemaTreeListController;
