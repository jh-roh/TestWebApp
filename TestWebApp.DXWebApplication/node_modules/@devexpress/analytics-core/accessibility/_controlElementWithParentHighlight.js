/**
* DevExpress Analytics (accessibility\_controlElementWithParentHighlight.js)
* Version:  22.1.5
* Build date: Sep 5, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ControlElementWithParentHighlight = void 0;
var _controlElementBase_1 = require("./_controlElementBase");
var ControlElementWithParentHighlight = (function (_super) {
    __extends(ControlElementWithParentHighlight, _super);
    function ControlElementWithParentHighlight(element, _parentElement) {
        var _this = _super.call(this, element) || this;
        _this.element = element;
        _this._parentElement = _parentElement;
        _this._borderCssClassName = ['dxd-border-accented', 'dx-accessibility-container-highlight'];
        _this.toolbarItemHandleFocus = function () {
            var _a;
            (_a = _this._parentElement.classList).add.apply(_a, _this._borderCssClassName);
        };
        _this.toolbarItemHandleBlur = function () {
            var _a;
            (_a = _this._parentElement.classList).remove.apply(_a, _this._borderCssClassName);
        };
        element.addEventListener('focus', _this.toolbarItemHandleFocus);
        element.addEventListener('blur', _this.toolbarItemHandleBlur);
        return _this;
    }
    ControlElementWithParentHighlight.prototype.dispose = function () {
        this.element.removeEventListener('focus', this.toolbarItemHandleFocus);
        this.element.removeEventListener('blur', this.toolbarItemHandleBlur);
        _super.prototype.dispose.call(this);
    };
    return ControlElementWithParentHighlight;
}(_controlElementBase_1.AccessibilityControlElementBase));
exports.ControlElementWithParentHighlight = ControlElementWithParentHighlight;
