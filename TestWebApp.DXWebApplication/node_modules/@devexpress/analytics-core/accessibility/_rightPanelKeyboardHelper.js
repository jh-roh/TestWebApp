/**
* DevExpress Analytics (accessibility\_rightPanelKeyboardHelper.js)
* Version:  22.1.5
* Build date: Sep 5, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.RightPanelKeyboardHelper = void 0;
var ko = require("knockout");
var _controlElementBase_1 = require("./_controlElementBase");
var _keyboardHelperBase_1 = require("./_keyboardHelperBase");
var RightPanelKeyboardHelper = (function (_super) {
    __extends(RightPanelKeyboardHelper, _super);
    function RightPanelKeyboardHelper(_tabPanel) {
        var _this = _super.call(this) || this;
        _this._tabPanel = _tabPanel;
        _this.controlElementClassName = 'dx-accessibility-rightpanel-button';
        return _this;
    }
    RightPanelKeyboardHelper.prototype.bindHandler = function (el) {
        var _this = this;
        _super.prototype.bindHandler.call(this, el);
        this._disposables.push(ko.computed(function () {
            _this._tabPanel.tabs.forEach(function (tab) { ko.unwrap(tab.visible); });
            _this.initialize();
        }).extend(({ rateLimit: { timeout: 1, method: 'notifyWhenChangesStop' } })));
    };
    RightPanelKeyboardHelper.prototype.initialize = function () {
        _super.prototype.initialize.call(this);
        this.setTabIndexes(0);
    };
    RightPanelKeyboardHelper.prototype.createControlElement = function (element, index) {
        if (ko.unwrap(this._tabPanel.tabs[index].visible))
            return new _controlElementBase_1.AccessibilityControlElementBase(element);
    };
    RightPanelKeyboardHelper.prototype.itemHandleDownArrowKey = function (e, index) {
        this.setFocusToNext(index, true);
        return true;
    };
    RightPanelKeyboardHelper.prototype.itemHandleUpArrowKey = function (e, index) {
        this.setFocusToPrevious(index, true);
        return true;
    };
    return RightPanelKeyboardHelper;
}(_keyboardHelperBase_1.AccessibilityKeyboardHelperBase));
exports.RightPanelKeyboardHelper = RightPanelKeyboardHelper;
