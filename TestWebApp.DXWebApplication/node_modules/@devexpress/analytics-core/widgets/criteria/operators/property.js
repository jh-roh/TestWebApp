/**
* DevExpress Analytics (widgets\criteria\operators\property.js)
* Version:  22.1.5
* Build date: Sep 5, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.OperandProperty = void 0;
var criteriaOperator_1 = require("./criteriaOperator");
var criteriaOperatorPreprocessor_1 = require("../utils/criteriaOperatorPreprocessor");
var OperandProperty = (function (_super) {
    __extends(OperandProperty, _super);
    function OperandProperty(propertyName, startColumn, startLine, originalPropertyLength, circumflex) {
        if (propertyName === void 0) { propertyName = ''; }
        if (startColumn === void 0) { startColumn = -1; }
        if (startLine === void 0) { startLine = -1; }
        if (originalPropertyLength === void 0) { originalPropertyLength = 0; }
        if (circumflex === void 0) { circumflex = false; }
        var _this = _super.call(this) || this;
        _this.type = 'property';
        _this.propertyName = propertyName;
        _this.originalPropertyLength = originalPropertyLength;
        _this.startPosition = { column: startColumn, line: startLine };
        _this.circumflex = circumflex;
        return _this;
    }
    Object.defineProperty(OperandProperty.prototype, "displayType", {
        get: function () {
            return '[' + this.propertyName + ']';
        },
        enumerable: false,
        configurable: true
    });
    OperandProperty.prototype.accept = function (visitor) {
        return visitor.visitOperandProperty
            ? visitor.visitOperandProperty(this)
            : criteriaOperatorPreprocessor_1.criteriaCreator.process('property', { propertyName: this.propertyName });
    };
    return OperandProperty;
}(criteriaOperator_1.CriteriaOperator));
exports.OperandProperty = OperandProperty;
criteriaOperatorPreprocessor_1.criteriaCreator.register('property', function (options) {
    return new OperandProperty(options.propertyName, options.startColumn, options.startLine, options.originalPropertyLength, options.circumflex);
});
