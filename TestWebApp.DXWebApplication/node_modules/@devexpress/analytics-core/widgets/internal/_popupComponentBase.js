/**
* DevExpress Analytics (widgets\internal\_popupComponentBase.js)
* Version:  22.1.5
* Build date: Sep 5, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.PopupComponentBase = void 0;
var ko = require("knockout");
var utils_1 = require("../../serializer/utils");
var PopupComponentBase = (function (_super) {
    __extends(PopupComponentBase, _super);
    function PopupComponentBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._component = ko.observable();
        _this.onContentReady = function (e) {
            _this._component(e.component);
        };
        _this.hideOnOutsideClick = function (e) {
            var component = _this.getComponent();
            var $content = component && $(component.content());
            return !$content || !($content.has(e.target).length || $content.is(e.target));
        };
        return _this;
    }
    PopupComponentBase.prototype.getComponent = function () {
        return ko.unwrap(this._component);
    };
    PopupComponentBase.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        var component = this._component();
        component && component.dispose();
        this._component(null);
    };
    return PopupComponentBase;
}(utils_1.Disposable));
exports.PopupComponentBase = PopupComponentBase;
