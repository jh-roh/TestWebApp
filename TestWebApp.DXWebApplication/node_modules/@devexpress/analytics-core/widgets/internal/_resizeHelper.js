/**
* DevExpress Analytics (widgets\internal\_resizeHelper.js)
* Version:  22.1.5
* Build date: Sep 5, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResizeHelper = void 0;
var _utils_1 = require("../../serializer/_utils");
var ko = require("knockout");
var $ = require("jquery");
var ResizeHelper = (function () {
    function ResizeHelper(resultSize, disabled) {
        var _this = this;
        if (disabled === void 0) { disabled = ko.observable(false); }
        this.resultSize = resultSize;
        this.disabled = disabled;
        var oldDelta = 0;
        this['_resize'] = function (delta, oldDelta) {
            _this.resultSize && _this.resultSize(_this.resultSize() - delta + oldDelta);
            return delta;
        };
        this.resize = function (params) {
            oldDelta = _this['_resize'](-params.delta.dy || params.delta.dh, oldDelta);
        };
        this.stopResize = function () { oldDelta = 0; };
    }
    ResizeHelper.prototype.resizable = function (resizeHandler, handles) {
        var _this = this;
        if (!resizeHandler) {
            resizeHandler = { starting: function () { }, stopped: function () { } };
        }
        return _utils_1.extend({}, resizeHandler, {
            handles: handles,
            $selectedNodes: $(),
            forceResize: this.resize,
            stopped: function () { _this.stopResize(); },
            handleClassName: 'dxd-back-secondary',
            disabled: this.disabled
        });
    };
    return ResizeHelper;
}());
exports.ResizeHelper = ResizeHelper;
