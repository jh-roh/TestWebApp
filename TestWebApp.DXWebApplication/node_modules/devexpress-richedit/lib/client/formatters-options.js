"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ClientFormattersOptions = void 0;
var DxLocDate = require("devextreme/localization/date");
var DxLocNumber = require("devextreme/localization/number");
var ClientFormattersOptions = (function () {
    function ClientFormattersOptions() {
    }
    Object.defineProperty(ClientFormattersOptions.prototype, "locDate", {
        get: function () { var _a; return (_a = DxLocDate.default) !== null && _a !== void 0 ? _a : DxLocDate; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "locNumber", {
        get: function () { var _a; return (_a = DxLocNumber.default) !== null && _a !== void 0 ? _a : DxLocNumber; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "twoDigitYearMax", {
        get: function () { return 2029; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "ts", {
        get: function () { return this.locDate.getTimeSeparator(); },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "ds", {
        get: function () { return '/'; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "am", {
        get: function () { return this.locDate.getPeriodNames()[0]; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "pm", {
        get: function () { return this.locDate.getPeriodNames()[1]; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "monthNames", {
        get: function () { return this.locDate.getMonthNames(); },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "genMonthNames", {
        get: function () { return this.locDate.getMonthNames(undefined, "format"); },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "abbrMonthNames", {
        get: function () { return this.locDate.getMonthNames('abbreviated'); },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "abbrDayNames", {
        get: function () { return this.locDate.getDayNames('abbreviated'); },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "dayNames", {
        get: function () { return this.locDate.getDayNames(); },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "shortTime", {
        get: function () { return "h" + this.ts + "mm tt"; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "longTime", {
        get: function () { return "h" + this.ts + "mm" + this.ts + "ss tt"; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "shortDate", {
        get: function () { return "M" + this.ds + "d" + this.ds + "yyyy"; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "longDate", {
        get: function () { return "dddd, MMMM d, yyyy"; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "monthDay", {
        get: function () { return "MMMM d"; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "yearMonth", {
        get: function () { return "MMMM yyyy"; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "numDecimalPoint", {
        get: function () { return this.locNumber.getDecimalSeparator(); },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "numPrec", {
        get: function () { return 2; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "numGroupSeparator", {
        get: function () { return this.locNumber.getThousandsSeparator(); },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "numGroups", {
        get: function () { return [3]; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "numNegPattern", {
        get: function () { return 1; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "numPosInf", {
        get: function () { return 'Infinity'; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "numNegInf", {
        get: function () { return '-Infinity'; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "numNan", {
        get: function () { return 'NaN'; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "currency", {
        get: function () { return '$'; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "currDecimalPoint", {
        get: function () { return this.locNumber.getDecimalSeparator(); },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "currPrec", {
        get: function () { return 2; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "currGroupSeparator", {
        get: function () { return this.locNumber.getThousandsSeparator(); },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "currGroups", {
        get: function () { return [3]; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "currPosPattern", {
        get: function () { return 0; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "currNegPattern", {
        get: function () { return 0; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ClientFormattersOptions.prototype, "percentPattern", {
        get: function () { return 0; },
        enumerable: false,
        configurable: true
    });
    ClientFormattersOptions.prototype.clone = function () {
        return new ClientFormattersOptions();
    };
    return ClientFormattersOptions;
}());
exports.ClientFormattersOptions = ClientFormattersOptions;
