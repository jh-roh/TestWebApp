/**
* DevExpress HTML/JS Reporting (designer\dataObjects\dataFederation.js)
* Version:  22.1.5
* Build date: Sep 5, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.SerializableDataFederationDataSource = exports.DataFederationDataSource = void 0;
var analytics_data_1 = require("@devexpress/analytics-core/analytics-data");
var ko = require("knockout");
var objectStorageItem_1 = require("./objectStorageItem");
var DataFederationDataSource = (function (_super) {
    __extends(DataFederationDataSource, _super);
    function DataFederationDataSource(model, _dsHelperProvider, _serializer) {
        var _this = _super.call(this, model, _dsHelperProvider, _serializer) || this;
        _this._dsHelperProvider = _dsHelperProvider;
        _this._serializer = _serializer;
        return _this;
    }
    DataFederationDataSource.getDependentDataSources = function (item, resultArray) {
        var _this = this;
        var dataSource = item.dataSource();
        if (dataSource instanceof DataFederationDataSource) {
            dataSource.serializableSourceMap().forEach(function (x) { return _this.getDependentDataSources(x, resultArray); });
        }
        resultArray.push(item);
    };
    DataFederationDataSource.prototype.preInitProperties = function (model) {
        var info = this._getInfo();
        this.getInfo = function () {
            var result = [];
            if (model && model['@Base64'])
                result = result.concat({ propertyName: 'base64', modelName: '@Base64' });
            return result.concat([], info, [
                {
                    modelName: 'SerializableSourceMap',
                    propertyName: 'serializableSourceMap',
                    array: true,
                    info: [
                        { modelName: '@DataSource', propertyName: 'dataSource', link: true },
                        { modelName: '@Name', propertyName: 'name' }
                    ]
                }
            ]);
        };
    };
    DataFederationDataSource.prototype.getSerializableModel = function () {
        if (!this._serializableModel)
            this._serializableModel = new SerializableDataFederationDataSource(this, null, this._dsHelperProvider, this._serializer);
        return this._serializableModel;
    };
    return DataFederationDataSource;
}(objectStorageItem_1.ObjectStorageItem));
exports.DataFederationDataSource = DataFederationDataSource;
var SerializableDataFederationDataSource = (function (_super) {
    __extends(SerializableDataFederationDataSource, _super);
    function SerializableDataFederationDataSource(dataSource, model, dsHelperProvider, serializer) {
        var _this = _super.call(this, dataSource, serializer) || this;
        if (!dataSource && model) {
            _this.dataSources = ko.observableArray(Object.keys(model.dataSources || {}).map(function (item) { return new objectStorageItem_1.ObjectStorageItem(model.dataSources[item], dsHelperProvider, _this.serializer); }));
            _this.dataSource = new DataFederationDataSource(model.dataSource, dsHelperProvider, _this.serializer);
        }
        return _this;
    }
    SerializableDataFederationDataSource.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.dataSources = null;
        this.dataSource = null;
    };
    return SerializableDataFederationDataSource;
}(analytics_data_1.SerializableDataFederationDataSource));
exports.SerializableDataFederationDataSource = SerializableDataFederationDataSource;
