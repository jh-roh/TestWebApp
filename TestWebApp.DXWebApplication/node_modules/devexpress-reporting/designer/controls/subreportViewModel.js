/**
* DevExpress HTML/JS Reporting (designer\controls\subreportViewModel.js)
* Version:  22.1.5
* Build date: Sep 5, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubreportViewModel = void 0;
var analytics_internal_1 = require("@devexpress/analytics-core/analytics-internal");
var xrReport_1 = require("./metadata/xrReport");
var xrReport_2 = require("./xrReport");
var SubreportViewModel = (function (_super) {
    __extends(SubreportViewModel, _super);
    function SubreportViewModel(model, serializer) {
        var _this = _super.call(this, model, serializer) || this;
        _this.isAllSufficient = false;
        delete _this._model['ObjectStorage'];
        delete _this._model['ComponentStorage'];
        return _this;
    }
    SubreportViewModel.from = function (model, serializer) {
        return model ? new SubreportViewModel(model, serializer) : null;
    };
    SubreportViewModel.toJson = function (value, serializer, refs) {
        value.parameterHelper.clearLayoutItems();
        return serializer.serialize(value, xrReport_1.reportSerializationInfo, refs);
    };
    SubreportViewModel.prototype._initializeBands = function () {
        if (this.bands().length === 0) {
            this.createChild({ '@ControlType': 'DetailBand', '@Name': 'Detail1' });
        }
    };
    SubreportViewModel.prototype.getInfo = function () {
        if (!this.isAllSufficient) {
            var newSerializationInfo = analytics_internal_1.extend(true, [], _super.prototype.getInfo.call(this));
            newSerializationInfo.reduce(function (indexes, currentInfo, index) {
                if (currentInfo.propertyName === '_objectStorage' || currentInfo.propertyName === '_componentStorage')
                    return __spreadArray([index], indexes);
                return indexes;
            }, []).forEach(function (index) { return newSerializationInfo.splice(index, 1); });
            return newSerializationInfo;
        }
        return _super.prototype.getInfo.call(this);
    };
    SubreportViewModel.prototype.serialize = function () {
        this.isAllSufficient = true;
        var result = _super.prototype.serialize.call(this);
        this.isAllSufficient = false;
        return result;
    };
    SubreportViewModel.defaultReport = {
        '@ControlType': 'DevExpress.XtraReports.UI.XtraReport',
        '@PageWidth': '850',
        '@PageHeight': '1100',
        '@Version': '22.1',
        '@Font': 'Arial,9pt',
        '@Dpi': '100',
        'Bands': {
            'Item1': {
                '@ControlType': 'TopMarginBand',
                '@HeightF': '100'
            },
            'Item2': {
                '@ControlType': 'DetailBand',
                '@HeightF': '100'
            },
            'Item3': {
                '@ControlType': 'BottomMarginBand',
                '@HeightF': '100'
            }
        }
    };
    return SubreportViewModel;
}(xrReport_2.ReportViewModel));
exports.SubreportViewModel = SubreportViewModel;
