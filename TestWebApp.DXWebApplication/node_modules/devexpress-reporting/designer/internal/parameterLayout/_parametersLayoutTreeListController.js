/**
* DevExpress HTML/JS Reporting (designer\internal\parameterLayout\_parametersLayoutTreeListController.js)
* Version:  22.1.5
* Build date: Sep 5, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ParametersLayoutTreeListController = void 0;
var analytics_internal_1 = require("@devexpress/analytics-core/analytics-internal");
var ko = require("knockout");
var xrReport_1 = require("../../controls/xrReport");
var layoutItems_1 = require("../../dataObjects/parameters/layoutItems");
var _parameterLayoutDragDropHandler_1 = require("./_parameterLayoutDragDropHandler");
var ParametersLayoutTreeListController = (function (_super) {
    __extends(ParametersLayoutTreeListController, _super);
    function ParametersLayoutTreeListController(_report, _selectedItemModel) {
        var _this = _super.call(this, undefined, undefined) || this;
        _this._report = _report;
        _this._selectedItemModel = _selectedItemModel;
        _this.getActions = function (item) {
            var model = item && item.data && item.data['data'];
            var imageTemplateName = model instanceof layoutItems_1.GroupLayoutItem ? 'dxrd-svg-actions-ungroup' : 'dxrd-svg-operations-recycle_bin';
            return [{
                    text: 'Delete',
                    displayText: function () { return analytics_internal_1.getLocalization('Delete', 'AnalyticsCoreStringId.Cmd_Delete'); },
                    imageClassName: 'dxrd-image-recycle-bin',
                    imageTemplateName: imageTemplateName,
                    clickAction: function (treeListItem) { return _this.delete(treeListItem.data['data']); }
                }];
        };
        _this._disposables.push(_this.dragDropHandler = new _parameterLayoutDragDropHandler_1.ParameterLayoutDragDropHandler(_selectedItemModel));
        return _this;
    }
    ParametersLayoutTreeListController.prototype._innerSwap = function (selectedItemModel, swapElement, goUp, currentCollection) {
        currentCollection.remove(selectedItemModel);
        if (goUp) {
            swapElement.parameterPanelLayoutItems.push(selectedItemModel);
        }
        else {
            swapElement.parameterPanelLayoutItems.unshift(selectedItemModel);
        }
        selectedItemModel.parentModel(swapElement);
    };
    ParametersLayoutTreeListController.prototype._outerSwap = function (selectedItemModel, goUp, currentCollection) {
        var parentModel = selectedItemModel.parentModel();
        var grandParentModel = parentModel.parentModel();
        currentCollection.remove(selectedItemModel);
        currentCollection = grandParentModel.parameterPanelLayoutItems;
        var index = currentCollection().indexOf(parentModel) + (goUp ? 0 : 1);
        currentCollection.splice(index, 0, selectedItemModel);
        selectedItemModel.parentModel(grandParentModel);
    };
    ParametersLayoutTreeListController.prototype._siblingsSwap = function (currentCollection, index, offset) {
        var _a;
        var _collection = ko.unwrap(currentCollection);
        _a = [_collection[index], _collection[index + offset]], _collection[index + offset] = _a[0], _collection[index] = _a[1];
        currentCollection.valueHasMutated();
    };
    ParametersLayoutTreeListController.prototype._checkIndex = function (index, goUp, parentModel) {
        return goUp ? index > 0 : parentModel.parameterPanelLayoutItems().length - 1 > index;
    };
    ParametersLayoutTreeListController.prototype.addItem = function (item) {
        var selectedItemModel = this._selectedItemModel();
        var root = this._report;
        if (selectedItemModel) {
            root = selectedItemModel instanceof layoutItems_1.GroupLayoutItem ? selectedItemModel : (selectedItemModel.parentModel() || selectedItemModel);
        }
        else {
            selectedItemModel = root.parameterPanelLayoutItems()[0];
        }
        root.parameterPanelLayoutItems.splice(root.parameterPanelLayoutItems().indexOf(selectedItemModel) + 1, 0, item);
        item.parentModel(root);
        this._selectedItemModel(item);
    };
    ParametersLayoutTreeListController.prototype.move = function (goUp) {
        if (goUp === void 0) { goUp = true; }
        var offset = goUp ? -1 : 1;
        var selectedItemModel = this._selectedItemModel();
        if (!selectedItemModel)
            return;
        var parentModel = selectedItemModel.parentModel();
        var collection = parentModel.parameterPanelLayoutItems;
        var index = collection().indexOf(selectedItemModel);
        if (this._checkIndex(index, goUp, parentModel)) {
            var swapElement = collection()[index + offset];
            if (swapElement instanceof layoutItems_1.GroupLayoutItem) {
                this._innerSwap(selectedItemModel, swapElement, goUp, collection);
            }
            else {
                this._siblingsSwap(collection, index, offset);
            }
        }
        else if (parentModel instanceof layoutItems_1.GroupLayoutItem) {
            this._outerSwap(selectedItemModel, goUp, collection);
        }
        this._selectedItemModel.valueHasMutated();
    };
    ParametersLayoutTreeListController.prototype.delete = function (item) {
        if (item === void 0) { item = this._selectedItemModel(); }
        if (!item)
            return;
        var isSelectedItem = item === this._selectedItemModel();
        var parentModel = item.parentModel();
        var collection = parentModel.parameterPanelLayoutItems.peek();
        var index = collection.indexOf(item);
        if (item instanceof layoutItems_1.GroupLayoutItem) {
            var childItems = item.parameterPanelLayoutItems();
            childItems.forEach(function (item) { return item.parentModel(parentModel); });
            collection.splice.apply(collection, __spreadArray([index, 0], childItems));
        }
        item.delete();
        if (item instanceof layoutItems_1.ParameterLayoutItem) {
            this._report.parameterHelper.parameters.remove(item.parameter());
        }
        if (isSelectedItem) {
            var nextItem = collection[index === collection.length ? index - 1 : index];
            if (nextItem) {
                this._selectedItemModel(nextItem);
            }
            else if (!(parentModel instanceof xrReport_1.ReportViewModel)) {
                this._selectedItemModel(parentModel);
            }
            else {
                this._selectedItemModel(null);
            }
        }
    };
    return ParametersLayoutTreeListController;
}(analytics_internal_1.ObjectStructureTreeListController));
exports.ParametersLayoutTreeListController = ParametersLayoutTreeListController;
