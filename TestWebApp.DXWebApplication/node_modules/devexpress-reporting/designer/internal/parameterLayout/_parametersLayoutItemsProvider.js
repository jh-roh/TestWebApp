/**
* DevExpress HTML/JS Reporting (designer\internal\parameterLayout\_parametersLayoutItemsProvider.js)
* Version:  22.1.5
* Build date: Sep 5, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ParametersLayoutItemsProvider = void 0;
var analytics_internal_1 = require("@devexpress/analytics-core/analytics-internal");
var $ = require("jquery");
var ko = require("knockout");
var layoutItems_1 = require("../../dataObjects/parameters/layoutItems");
var arrayName = 'parameterPanelLayoutItems';
var ParametersLayoutItemsProvider = (function (_super) {
    __extends(ParametersLayoutItemsProvider, _super);
    function ParametersLayoutItemsProvider(report, member) {
        var _this = _super.call(this, [{ model: report, name: 'Report' }], [arrayName], member, null) || this;
        _this.getItems = function (pathRequest) {
            var result = $.Deferred();
            if (!pathRequest.fullPath) {
                var resultItems = [];
                _this.createArrayItem(report.parameterPanelLayoutItems(), resultItems, "Report." + arrayName);
                result.resolve(resultItems);
            }
            else {
                result.resolve(_this.getObjectPropertiesForPath(report, pathRequest.fullPath, arrayName));
            }
            return result.promise();
        };
        _this.getPathByMember = function (model) {
            if (model instanceof layoutItems_1.ParameterPanelLayoutItem) {
                return _this.getPathByMember(model.parentModel()) + ("." + arrayName + ".") + model.parentModel().parameterPanelLayoutItems().indexOf(model);
            }
            else {
                return 'Report';
            }
        };
        return _this;
    }
    ParametersLayoutItemsProvider.prototype.createArrayItem = function (currentTarget, result, propertyName) {
        currentTarget.forEach(function (element, index) {
            element = ko.unwrap(element);
            result.push({
                name: propertyName ? propertyName + '.' + index.toString() : index.toString(),
                displayName: ko.unwrap(element['name']),
                specifics: element.className(),
                isList: element[arrayName] && ko.unwrap(element[arrayName]).length > 0,
                data: element,
                dragData: {
                    noDragable: false
                }
            });
        });
    };
    return ParametersLayoutItemsProvider;
}(analytics_internal_1.ObjectExplorerProvider));
exports.ParametersLayoutItemsProvider = ParametersLayoutItemsProvider;
