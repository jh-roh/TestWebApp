/**
* DevExpress HTML/JS Reporting (designer\internal\dragdrop\_objectExplorerDragDropHandler.js)
* Version:  22.1.5
* Build date: Sep 5, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ObjectExplorerDragDropHandler = void 0;
var analytics_internal_1 = require("@devexpress/analytics-core/analytics-internal");
var ko = require("knockout");
var ObjectExplorerDragDropHandler = (function (_super) {
    __extends(ObjectExplorerDragDropHandler, _super);
    function ObjectExplorerDragDropHandler(_canAddItems, surface, selection, undoEngine, dragHelperContent) {
        var _this = _super.call(this, surface, selection, undoEngine, null, dragHelperContent) || this;
        _this._canAddItems = _canAddItems;
        _this.undoEngine = undoEngine;
        _this._lastList = null;
        _this._timeout = null;
        _this.cursor = 'arrow';
        _this.alwaysAlt = true;
        _this.containment = '.dxrd-designer';
        _this['cursorAt'] = {
            top: 0,
            left: 0
        };
        return _this;
    }
    ObjectExplorerDragDropHandler.prototype.drag = function (event, ui) {
        var _this = this;
        var isLocked = this.selection && this.selection.dropTarget && this.selection.dropTarget.locked;
        if (this.reportControlsDragDropHelper.started) {
            var target = event['toElement'] || (ko.dataFor(event.relatedTarget) && event.relatedTarget) || (event.originalEvent && event.originalEvent.target) || null;
            if (target) {
                this.reportControlsDragDropHelper.setNewDropTarget(ko.dataFor(target), target, event.pageY);
            }
            var _target = this.reportControlsDragDropHelper['_target'];
            if (_target && _target.hasItems && (_target.collapsed && _target.collapsed())) {
                if (this._lastList !== _target) {
                    this._timeout && clearTimeout(this._timeout);
                    this._lastList = _target;
                    this._timeout = setTimeout(function () {
                        _this._lastList.collapsed() && _this._lastList.toggleCollapsed();
                    }, 500);
                }
            }
            else {
                this._lastList = null;
                this._timeout && clearTimeout(this._timeout);
            }
            isLocked = isLocked || !this._canAddItems();
        }
        this.dragHelperContent.isLocked(isLocked);
    };
    return ObjectExplorerDragDropHandler;
}(analytics_internal_1.DragDropHandler));
exports.ObjectExplorerDragDropHandler = ObjectExplorerDragDropHandler;
