/**
* DevExpress HTML/JS Reporting (designer\wizard\internal\_crossTabDragUtils.js)
* Version:  22.1.5
* Build date: Sep 5, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.CrossTabWizardDragDropHandler = exports.CrossTabWizardFieldListController = void 0;
var analytics_internal_1 = require("@devexpress/analytics-core/analytics-internal");
var _fieldListController_1 = require("../../internal/fieldlist/_fieldListController");
var CrossTabWizardFieldListController = (function (_super) {
    __extends(CrossTabWizardFieldListController, _super);
    function CrossTabWizardFieldListController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.showIconsForChildItems = function () { return true; };
        return _this;
    }
    CrossTabWizardFieldListController.prototype.isDraggable = function (item) {
        if (!analytics_internal_1.isList(item.data))
            return true;
        return false;
    };
    return CrossTabWizardFieldListController;
}(_fieldListController_1.FieldListController));
exports.CrossTabWizardFieldListController = CrossTabWizardFieldListController;
var CrossTabWizardDragDropHandler = (function (_super) {
    __extends(CrossTabWizardDragDropHandler, _super);
    function CrossTabWizardDragDropHandler() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CrossTabWizardDragDropHandler.prototype.doStopDrag = function (ui, draggable) {
        this.dragHelperContent.reset();
        if (this._dropTarget) {
            this._addHandler(this._dropTarget, draggable.data.name);
        }
    };
    return CrossTabWizardDragDropHandler;
}(analytics_internal_1.WizardDragDropHandler));
exports.CrossTabWizardDragDropHandler = CrossTabWizardDragDropHandler;
