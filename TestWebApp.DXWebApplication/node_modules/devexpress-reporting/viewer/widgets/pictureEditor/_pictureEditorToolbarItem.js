/**
* DevExpress HTML/JS Reporting (viewer\widgets\pictureEditor\_pictureEditorToolbarItem.js)
* Version:  22.1.5
* Build date: Sep 5, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.PictureEditorToolbarItemWithPopup = exports.PictureEditorToolbarItem = void 0;
var analytics_widgets_internal_1 = require("@devexpress/analytics-core/analytics-widgets-internal");
var $ = require("jquery");
var PictureEditorToolbarItem = (function () {
    function PictureEditorToolbarItem(options) {
        this.id = options.id;
        this.icon = options.icon;
        this.action = options.action;
        this.active = options.active;
        this.renderedHandler = options.renderedHandler;
        this.title = options.title;
    }
    PictureEditorToolbarItem.prototype.dispose = function () {
        this.renderedHandler = null;
        this.action = null;
    };
    return PictureEditorToolbarItem;
}());
exports.PictureEditorToolbarItem = PictureEditorToolbarItem;
var PictureEditorToolbarItemWithPopup = (function (_super) {
    __extends(PictureEditorToolbarItemWithPopup, _super);
    function PictureEditorToolbarItemWithPopup(options) {
        var _this = _super.call(this, options) || this;
        _this.template = options.template;
        if (options.templateOptions) {
            _this.templateOptions = options.templateOptions;
            _this._popup = new analytics_widgets_internal_1.PopupComponentBase();
            _this.templateOptions.onContentReady = _this._popup.onContentReady;
            _this.templateOptions.hideOnOutsideClick = _this._popup.hideOnOutsideClick;
            _this.templateOptions.onShown = function (e) {
                var $element = $(e.element);
                var topElement = $element.position().top;
                var popupsOffset = e['model'].getPositionTarget().offset().top - $(e.component.content()).offset().top;
                var $arrow = $($element.find('.dx-popover-arrow')[0]);
                $arrow.css('top', popupsOffset + topElement - 24 - 11);
            };
        }
        return _this;
    }
    PictureEditorToolbarItemWithPopup.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this._popup.dispose();
        this.templateOptions = null;
    };
    return PictureEditorToolbarItemWithPopup;
}(PictureEditorToolbarItem));
exports.PictureEditorToolbarItemWithPopup = PictureEditorToolbarItemWithPopup;
